# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Desktop:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-12, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install libVLC (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec
          haxelib git linc_luajit https://github.com/nebulazorua/linc_luajit
          haxelib install hscript
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git faxe https://github.com/uhrobots/faxe
          haxelib git polymod https://github.com/MasterEric/polymod.git
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec
          haxelib install hxcpp-debug-server
      - name: Compile (Windows)
        if: startsWith(matrix.os, 'windows')
        run: haxelib run lime build windows

      - name: Compile (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build linux

      - name: Compile (macOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build mac

      - name: Upload Artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error

      - name: Upload Artifact (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: export/release/linux/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 12)
        if: matrix.os == 'macos-12'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-x86_64
          path: export/release/macos/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 14)
        if: matrix.os == 'macos-14'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-arm64
          path: export/release/macos/bin/*
          if-no-files-found: error
  Web:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install libVLC (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib install lime 8.0.0
          haxelib install openfl 9.2.0
          haxelib install flixel 4.11.0
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-ui 2.5.0 --quiet
          haxelib install flixel-addons 2.11.0
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec 2.5.1
          haxelib install linc_luajit
          haxelib install hscript
          haxelib install actuate
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git faxe https://github.com/uhrobots/faxe
          haxelib git polymod https://github.com/larsiusprime/polymod.git
          haxelib install hxcpp-debug-server

      - name: Compile (Html5)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build html5
        
      - name: Upload Artifact (Html5)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: Html5Build
          path: export/release/html5/bin/*
          if-no-files-found: error
  Mobile:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib install lime 8.0.0
          haxelib install openfl 9.2.0
          haxelib install flixel 4.11.0
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install flixel-ui 2.5.0 --quiet
          haxelib install flixel-addons 2.11.0
          haxelib install tjson
          haxelib install hxjsonast
          haxelib install hxCodec 2.5.1
          haxelib install linc_luajit
          haxelib install hscript
          haxelib install actuate
          haxelib git hscript-ex https://github.com/ianharrigan/hscript-ex
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git faxe https://github.com/uhrobots/faxe
          haxelib git polymod https://github.com/larsiusprime/polymod.git
          haxelib install hxcpp-debug-server
      - name: Configure Android
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true
      - name: Compile (Android)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build android -ONLY_ARMV7

      - name: Compile (iOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build ios -nosign

      - name: Make Ipa
        if: startsWith(matrix.os, 'macos')
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r PsychEngine.ipa Payload
      - name: Upload Artifact (Android)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload Artifact (iOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
